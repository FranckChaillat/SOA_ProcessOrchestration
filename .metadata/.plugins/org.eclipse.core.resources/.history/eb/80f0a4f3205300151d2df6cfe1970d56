package serviceContractCheckEngine

import java.util.TimerTask
import serviceConsumer.serviceInventory.InventoryManager
import serviceConsumer.ServiceProvider
import scala.collection.mutable.ListBuffer
import processOrchestration.Silos
import scala.xml.XML


/**
 * @author fra
 */
object Watcher {
    new Thread(new Runnable{def run= discover}).start
  
   def discover(){
     new java.util.Timer().scheduleAtFixedRate(new TimerTask{ 
       
       def run(){
         
         def discover(silos : List[Silos])   = {
            if (silos.length>0){
              val props = InventoryManager.getDiscoveryProps(silos(0).name)
              val res = new ServiceProvider().execute(Map("host" -> props("host"),
                                                "silosUri"-> props("baseUri"),
                                                "uri" -> props("uri"),
                                                "httpMethod" -> "GET",
                                                "dataType"-> "application/xml"), Map())
             
              checkUpdates(res)
              
            }
         }
         
         val res = InventoryManager.getSilos
         System.out.print("check inventory...")
         discover(res)
         
       }}, 0, 1000*60 *5)
   }
    
    
    def checkUpdates(wadlContent: String){
      
      //val wadlContent2 = "<coucou><toi><test>ceci est un message</test></toi> <moi>ceci est un autre message</moi></coucou>"
      val xml= XML.loadString(wadlContent)
      
      
      val s=InventoryManager.getService().map((f)=>{f("uri")}).toList
      //var aa = xml.\\("resources")(0).child.forall{ x => s.contains(x.\("@path").text) }
      val aa = xml.\\("resources")(0).child.map { x => x.\("@path") }
      
      print(Seq("coucou", "toi").contains("coucou"))
      
      //println(aa.foreach { x => print(x)
        //                   print(s.contains(x)) })
      
    
    
      
    
    }
    
}